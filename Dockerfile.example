# Multi-stage build for optimized production image
FROM python:3.11-slim as builder

# Install system dependencies for building
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
WORKDIR /app
COPY requirements.txt .
RUN pip install --no-cache-dir --user -r requirements.txt

# Production stage
FROM python:3.11-slim as production

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ffmpeg \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN useradd --create-home --shell /bin/bash bot

# Copy Python dependencies from builder
COPY --from=builder /root/.local /home/bot/.local

# Set up application
WORKDIR /app
COPY --chown=bot:bot . .

# Create data directories
RUN mkdir -p /app/data/cache && chown -R bot:bot /app/data

# Switch to non-root user
USER bot

# Update PATH to include local pip installations
ENV PATH=/home/bot/.local/bin:$PATH

# Health check
HEALTHCHECK --interval=60s --timeout=10s --start-period=30s --retries=3 \
  CMD python -c "import sys; sys.path.append('.'); from src.core.app import bot; print('Bot healthy')" || exit 1

# Run the bot
CMD ["python", "-m", "src.main"]